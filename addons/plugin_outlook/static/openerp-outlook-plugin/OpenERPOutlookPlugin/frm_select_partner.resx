<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_select_partner_search.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhEAAQAPYAAPb29v7+/v39/fr6+t///+P//+T//9zc3IKDkfP//8X3//Pz99P//5Zxf5qqwZiZ
        nc98R5K03KS83aG60bbr/8f5/7C61fX09OXm5rzx/////qzI6sr2/7TO6vr//7vt/9n//7rt/+Xl5LLm
        //2rRKihla683sx6SXp/iuzs9P/+/aC4xd/w+LHl/4+ewuTk5Ih1jpKhucjh7cHAwaGepcfH2bHe+2ps
        ft7f4Pz8/Ih1jZmYot7d3PPy+Nb//9T//4WJm97f38v5/8LE3cD0/8v9///pybnb8fjgv9z///////v7
        +/urRnt7hLnk/9Tk86zg/5mZpn+Ajbvm//j+/7nt///aof/58f/589v//5m75dH//8P3/8L3/2trg8z8
        /4uiwadtSIGMrMaAXZ6hvqKhouz///ysRbvr//39/v/XnZaotvPOmbSwtpl0hv2mOcjO5bu7vry8yd7e
        7K+tsLC83ZiuzqyEacrW6P///wAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAHkALAAAAAAQABAAAAejgHmC
        g4SFhoILFnYSJjUAh3lpQyw+RB9aZBeGAXBPVE5QI1wRcoY9HRxTIRVCXwoOA4VzRxQtRVkFBCArj4Qp
        GxlVPwYJZgRrvYMBdTZdDAUeSjJAsYNXSHEuaFtJBnheM4QaaiR3TWJgEzE3ZTmDKkZnEA07PG00dAdL
        g1hWTGMwpGDIE0CAgEJs3pzQgeIFJEElwrhBIOKhIBwPogSxyNFQIAA7
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAxO+0UHsorMtUkJMo6LOY5JN81HsdDLM4/JMdINcBISKJCSpA+RpM9SJo6RJsxPJg2PJ84PKU4OadA
        Pbs7L8lANd8qJNUiJtIZKModMNcUJOIUHu0iJvsaIOUaJsQuQMkXHNcvNOciJsstLNAvItJSQekqG6xQ
        QchYSNKOg/3Cw//Q2f/P1f/S2P/T3P/R2P+iqP+7vv9vct8zM6k0Lbg6NcwcGroyN9oiLs4eLdccKOQg
        KvMkKfYaIuEbJsgnOMkdGuUeHd4+PeseHLxAONI9N7p4edSzt//W1v/k4//h6P/f5v/Dw/+2tf+1t/+0
        tv/Kzv/Y3f/S1f/U2P/Fyf8iKJlOVNMtM8IuM9UjKtgdJd0aI98bJN8nMOUqNN8dKc0pIPMnIOUvK9g5
        N8w4NLWGiObR4P/k9//k7//K0/+JkeRWW8I5N78uKcAvLL4wMrxCR8hTWNKOlP/a4v/Z4//W4v+Ai+cx
        OaooKr4mJ88sLuAjKNsWIMwoMt4yOusZI9QnHO42Le8lIME+Pb2Dg+fk7//o///b9/ff8v+OnN5ET6sx
        NrE3MdIyKdcvKsszNscxOL0uN7YkKqdvduPc6f/Y6v/f8P/F0v9PUMg1MMc0MNY4OOQlK9AdJs4iLN4c
        J90sIucvKdovL7lcX8fm6v/q9v/m/vbl//yQocxRXa8jLp4sML83MeIsJNwnJsoxNckjLrRATNBARNIo
        K6srN4/c7f/a7f/k8//Kzf9pZN0nHrQrJskyNNgkLNMbJdYgK+AxK9wxL8k+RK/N1f/s8v/r9v/Y6uvq
        +/9UW6o2ObMlKbgpK88vKuMqJt0sL801PcwwP8QaJ7MjIsY1MdBDRL54gtDm9//Y6fzq8//AwP9jWdU0
        KMAxLdIwMt4hLtgcLdc3NdsfIauFkODo9P/x+v/p8vzx/f+uteY7OKw2L8wtLtYpK90nKeIpKt4qLs0l
        Lr4iML4yPdUrJ94xKN0yLMc3OKavuuzt+//c5vfv9P/Z0/9rYN8tJsMoKNIjL9UYK9A9Od4hJKS9y//n
        9//0///x9/z09v+dl+g8LsoyI+InJ98iKd4iKN8kKtspLdIpMM0qNdMcI8wpJucqH+c8L+kzKL5MTaXs
        8//0///w+v/x8f++uf8vKLM0M9YlL9MkNNoxK9Y2OLrc7P/t///4//f7///28v+EeNw8JtkuHu4kJuMe
        Kd4gKd4iKdwpKdkpKdknK90gJNssKu4iGeUuH+wvIdM9MrCmpOr0/f/r9uz2/P/q7f+XlP8zMcYhKMsf
        LNYmHtc4OsTk8v/x//73/+39//v28P99b9U7JdssHu4gKOAcK9seKd4iJ+ApJOUrIucmIegjIuYwMu8b
        GtwiGOczJOowHsVYS7709P/5//r6//Xy/P/d4P87PbkiJMghJdspI+AvML7b6f/x//79//L+/vj68v+N
        f+Q7J9crIeoeKtwZLtccKtwiJ+IrIeksH+0oHu0iH+YuNOsdItsdGuU3LPgzHt42I7XY0P/6/f/2/+np
        +ejq8/92fN8rLcgqKeMsKuEyNcDc6f/z//////j///779P+Ngds7LM4rJeIcLdcXMNQbLNsiJ+IsIucu
        IOouJOwhHt8lL+AfLNwaIuEtLPI0Juo1I8SajOr49f/1/+z4//Dt+//J0v8vLsAvKt8gJc44QMPj7//w
        +f/8/Pz//P/88v9zabw7L8cpKdscL9QXMNIbLNsiKN8sJeIwJOIzK+QjJdcfK9cdLtsWJt0eJ+MuJ+Y5
        K9B8bNzv5v/z+fT6//Ln9/3k7/8wMrYsJtEcK70yQbXj8P/w9//79P//+P/78P98csU5McQnK9gbL9QX
        MNQbLNkkK9kuKtcyK9IxL88qL9EcKNQYKtsXK94YKNknK9g1L8pjVM3m2f/6+P/6//7j8fff7P9fYdcs
        KsMsN88tOLHb5//z+//////89/n79f+kn+o5NL8nLNUbLtUVL9cbLNsiKtssKtgyK9QsJ8oyM9ceJtcV
        JdwYLuQWLd0hLtYrL8MxK6LWzv/49//w9fbz///q9v+lqP83NrYjHNk7Oszk7f/d7ez9/+T8/9/2+v/e
        4P8wMKwyN9kLHMcgNukZKeAdJuIrJu0uIek1I+IyJOAlJeMbJuYQKOYQKuIXLtgkNcYmL5fm7v/z/P/1
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>