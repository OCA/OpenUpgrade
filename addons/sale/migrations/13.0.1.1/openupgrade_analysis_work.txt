---Models in module 'sale'---
model sale.product.configurator (moved to sale_product_configurator) [transient]
# NOTHING TO DO

---Fields in module 'sale'---
sale         / account.invoice          / comment (False)               : DEL mode: modify
sale         / account.invoice          / partner_shipping_id (many2one): DEL relation: res.partner
sale         / account.invoice          / team_id (many2one)            : DEL relation: crm.team
sale         / account.move             / partner_shipping_id (many2one): NEW relation: res.partner
sale         / account.move             / team_id (many2one)            : NEW relation: crm.team, hasdefault
# DONE: Post-migration: Update moves from old invoices

sale         / account.move             / campaign_id (many2one)        : NEW relation: utm.campaign
sale         / account.move             / medium_id (many2one)          : NEW relation: utm.medium
sale         / account.move             / source_id (many2one)          : NEW relation: utm.source
# DONE: post-migration: copy values from old invoice if fields existed (being in sale_crm module in v12)

sale         / account.invoice.line     / sale_line_ids (many2many)     : DEL relation: sale.order.line
sale         / account.move.line        / sale_line_ids (many2many)     : NEW relation: sale.order.line
sale         / sale.order.line          / invoice_lines (many2many)     : relation is now 'account.move.line' ('account.invoice.line') [nothing to do]
# DONE: pre-migration: Rename table for avoiding FK errors
# DONE: post-migration: Insert relations with mapped IDs

sale         / crm.team                 / dashboard_graph_model (False) : DEL selection_keys: ['account.invoice.report', 'crm.lead', 'sale.report'], mode: modify
# NOTHING TO DO: Removed feature

sale         / crm.team                 / use_invoices (boolean)        : DEL
# DONE: pre-migration: Set `invoiced_target` to 0 if not set

sale         / product.attribute        / display_type (selection)      : NEW required, selection_keys: ['color', 'radio', 'select'], req_default: function, hasdefault
sale         / product.attribute        / type (selection)              : DEL required, selection_keys: ['color', 'radio', 'select'], req_default: function
# DONE: pre-migration: Rename field

sale         / product.attribute.custom.value / attribute_value_id (many2one) : DEL relation: product.attribute.value
sale         / product.attribute.custom.value / custom_product_template_attribute_value_id (many2one): NEW relation: product.template.attribute.value, required
# DONE: post-migration: Update records with new relation

sale         / product.attribute.custom.value / sale_order_line_id (many2one) : now required
# NOTHING TO DO: Previous v12 logic makes this to not be null

sale         / product.pricelist        / discount_policy (selection)   : module is now 'product' ('sale')
# NOTHING TO DO: Done on product

sale         / product.product          / optional_product_ids (many2many): module is now 'sale_product_configurator' ('sale')
sale         / product.template         / optional_product_ids (many2many): module is now 'sale_product_configurator' ('sale')
# DONE: post-migration: Set `sale_product_configurator` to be installed if any optional product found and update field module definition

sale         / res.company              / sale_note (text)              : DEL
# NOTHING TO DO: Lost feature

sale         / sale.order               / campaign_id (many2one)        : previously in module sale_crm
sale         / sale.order               / medium_id (many2one)          : previously in module sale_crm
sale         / sale.order               / source_id (many2one)          : previously in module sale_crm
# DONE: pre-migration: Update field module definition

sale         / sale.order               / company_id (many2one)         : now required, req_default: function
# NOTHING TO DO: v12 business logic always fills this field

sale         / sale.order               / confirmation_date (datetime)  : DEL
# DONE: pre-migration: copy date_order column for preserving old dates
# DONE: post-migration: put confirmation_date in date_order for confirmed orders

sale         / sale.order               / signed_on (datetime)          : NEW
# DONE: post-migration: filled it with confirmation_date when signed

sale         / sale.order               / invoice_ids (many2many)       : relation is now 'account.move' ('account.invoice') [nothing to do]
# NOTHING TO DO: computed non stored field

sale         / utm.campaign             / company_id (many2one)         : NEW relation: res.company, hasdefault
# DONE: pre-migration: Pre-create field for avoiding the default company and let them behaves as in v12 - multi-company -

---XML records in module 'sale'---
DEL crm.team: sales_team.team_sales_department (noupdate)
# NOTHING TO DO: It's from sales_team module

NEW ir.actions.act_window: sale.action_sale_order_generate_link
DEL ir.actions.act_window: sale.action_open_sale_onboarding_quotation_layout
NEW ir.actions.server: sale.model_sale_order_action_quotation_sent
NEW ir.config_parameter: sale.default_confirmation_template (noupdate)
# NOTHING TO DO: noupdate=0 or new xmls

NEW ir.model.access: sale.access_account_move_manager
NEW ir.model.access: sale.access_account_move_salesman
DEL ir.model.access: sale.access_account_invoice_manager
DEL ir.model.access: sale.access_account_invoice_salesman
# DONE: pre-migration (renamed)

NEW ir.model.access: sale.access_account_account_tag_sale_salesman
NEW ir.model.access: sale.access_account_account_type_sale_salesman
NEW ir.model.access: sale.access_account_partial_reconcile_salesman
DEL ir.model.access: sale.access_account_invoice_line_salesman
DEL ir.model.access: sale.access_account_invoice_tax_sale_manager
DEL ir.model.access: sale.access_account_invoice_tax_salesman
DEL ir.model.access: sale.access_product_price_history_salemanager
NEW ir.rule: sale.account_move_line_personal_rule (noupdate)
NEW ir.rule: sale.account_move_line_see_all (noupdate)
NEW ir.rule: sale.account_move_personal_rule (noupdate)
NEW ir.rule: sale.account_move_see_all (noupdate)
NEW ir.ui.view: sale.account_invoice_view_tree
NEW ir.ui.view: sale.assets_tests
NEW ir.ui.view: sale.product_template_sale_form_view
NEW ir.ui.view: sale.report_assets_common_inherit_sale
NEW ir.ui.view: sale.sale_order_view_activity
NEW ir.ui.view: sale.utm_campaign_view_form
NEW ir.ui.view: sale.utm_campaign_view_kanban
NEW ir.ui.view: sale.view_sales_order_auto_done_setting
DEL ir.ui.view: sale.account_invoice_line_form
DEL ir.ui.view: sale.account_invoice_line_tree
DEL ir.ui.view: sale.account_invoice_supplier_form
DEL ir.ui.view: sale.optional_product_items
DEL ir.ui.view: sale.optional_products_modal
DEL ir.ui.view: sale.product_configurator_configure
DEL ir.ui.view: sale.product_configurator_configure_optional_products
DEL ir.ui.view: sale.product_pricelist_view_form
DEL ir.ui.view: sale.product_pricelist_view_kanban
DEL ir.ui.view: sale.product_pricelist_view_tree
DEL ir.ui.view: sale.report_all_channels_sales_view_pivot
DEL ir.ui.view: sale.report_all_channels_sales_view_search
DEL ir.ui.view: sale.sale_onboarding_quotation_layout_form
DEL ir.ui.view: sale.sale_product_configurator_view_form
DEL ir.ui.view: sale.variants_tree_view
DEL ir.ui.view: sale.view_order_form_editable_list
NEW mail.template: sale.mail_template_sale_confirmation (noupdate)
DEL res.groups: sale.group_sale_order_dates
# NOTHING TO DO: noupdate=0 or new xmls

NEW res.groups: sale.group_auto_done_setting
# DONE: post-migration: Add the group to internal users if system parameter 'sale.auto_done_setting' is present

DEL res.groups: sale.group_discount_per_so_line [renamed to product module]
# NOTHING TO DO: Done on product module
