---Models in module 'website_sale'---
---Fields in module 'website_sale'---
website_sale / account.invoice          / website_id (many2one)         : DEL relation: website
website_sale / account.move             / website_id (many2one)         : NEW relation: website, isrelated: related, stored
# DONE: post-migration: moved website_id from invoices to moves

website_sale / product.image            / can_image_1024_be_zoomed (boolean): NEW isfunction: function, stored
# NOTHING TO DO: It will be fast processed at module upgrade, as image_1920 is empty yet, and recomputed on post-migration when image_1920 is really loaded. An optimization on huge DB may be needed.

website_sale / product.image            / image (binary)                : DEL attachment: True
website_sale / product.image            / image_1024 (binary)           : NEW attachment: True, isrelated: related, stored
website_sale / product.image            / image_128 (binary)            : NEW attachment: True, isrelated: related, stored
website_sale / product.image            / image_1920 (binary)           : NEW required, attachment: True
website_sale / product.image            / image_256 (binary)            : NEW attachment: True, isrelated: related, stored
website_sale / product.image            / image_512 (binary)            : NEW attachment: True, isrelated: related, stored
# DONE: post-migration converted. An optimization on huge DB may be needed.

website_sale / product.image            / name (char)                   : now required
# DONE: post-migration: filled heuristically when empty

website_sale / product.image            / product_variant_id (many2one) : NEW relation: product.product
website_sale / product.product          / product_variant_image_ids (one2many): NEW relation: product.image
# DONE: New feature for allowing to put extra images for variants

website_sale / product.image            / sequence (integer)            : NEW hasdefault
# NOTHING TO DO: New feature for sorting images. Default value is OK as it preserves the same order having ID as second sort criteria

website_sale / product.image            / video_url (char)              : NEW
# NOTHING TO DO: New feature for linking videos 

website_sale / product.product          / website_url (char)            : not related anymore
website_sale / product.product          / website_url (char)            : now a function
# NOTHING TO DO: Computed non stored field

website_sale / product.public.category  / image (binary)                : DEL attachment: True
website_sale / product.public.category  / image_1024 (binary)           : NEW attachment: True, isrelated: related, stored
website_sale / product.public.category  / image_128 (binary)            : NEW attachment: True, isrelated: related, stored
website_sale / product.public.category  / image_1920 (binary)           : NEW attachment: True
website_sale / product.public.category  / image_256 (binary)            : NEW attachment: True, isrelated: related, stored
website_sale / product.public.category  / image_512 (binary)            : NEW attachment: True, isrelated: related, stored
website_sale / product.public.category  / image_medium (binary)         : DEL attachment: True
website_sale / product.public.category  / image_small (binary)          : DEL attachment: True
# DONE: post-migration converted. An optimization on huge DB may be needed.

website_sale / product.public.category  / parent_path (char)            : NEW
# DONE: post-migration: call _parent_store_compute() method

website_sale / product.public.category  / product_tmpl_ids (many2many)  : NEW relation: product.template
# NOTHING TO DO: Inverse m2m from the one existing in product.template and the relation table hasn't changed from v12 to v13

website_sale / product.public.category  / website_description (html)    : NEW
# NOTHING TO DO: New feature for adding CMS content at public category level

website_sale / product.template         / product_image_ids (one2many)  : DEL relation: product.image
website_sale / product.template         / product_template_image_ids (one2many): NEW relation: product.image
# DONE: pre-migration: renamed

website_sale / website                  / all_pricelist_ids (one2many)  : NEW relation: product.pricelist
# NOTHING TO DO: Inverse relation from existing m2o

website_sale / website                  / shop_ppg (integer)            : NEW hasdefault
website_sale / website                  / shop_ppr (integer)            : NEW hasdefault
# NOTHING TO DO: Default values 20 and 4 matches the hardcoded existing ones in v12

website_sale / website.track            / product_id (many2one)         : NEW relation: product.product
# NOTHING TO DO: New feature for linking product to visitor tracking

---XML records in module 'website_sale'---
DEL ir.rule: website_sale.payment_token_salesman_rule (noupdate)
DEL ir.rule: website_sale.payment_transaction_salesman_rule (noupdate)
# DONE: post-migration: Try to remove them

NEW ir.actions.act_window: website_sale.website_sale_visitor_product_action
DEL ir.ui.menu: website_sale.menu_catalog_variants_action
NEW ir.ui.view: website_sale._assets_primary_variables
NEW ir.ui.view: website_sale.account_move_view_form
NEW ir.ui.view: website_sale.add_grid_or_list_option
NEW ir.ui.view: website_sale.assets_tests
NEW ir.ui.view: website_sale.assets_wysiwyg
NEW ir.ui.view: website_sale.product_buy_now
NEW ir.ui.view: website_sale.product_image_view_kanban
NEW ir.ui.view: website_sale.product_product_view_form_easy_inherit_website_sale
NEW ir.ui.view: website_sale.product_template_view_tree
NEW ir.ui.view: website_sale.product_template_view_tree_website_sale
NEW ir.ui.view: website_sale.recently_viewed_products_product
NEW ir.ui.view: website_sale.remove_external_snippets
NEW ir.ui.view: website_sale.s_products_recently_viewed
NEW ir.ui.view: website_sale.s_products_searchbar
NEW ir.ui.view: website_sale.s_products_searchbar_input
NEW ir.ui.view: website_sale.search_count_box
NEW ir.ui.view: website_sale.snippet_options
NEW ir.ui.view: website_sale.snippets
NEW ir.ui.view: website_sale.view_order_tree
NEW ir.ui.view: website_sale.view_quotation_tree
NEW ir.ui.view: website_sale.website_sale_pricelist_form_view2
NEW ir.ui.view: website_sale.website_sale_products_search_box
NEW ir.ui.view: website_sale.website_sale_visitor_page_view_graph
NEW ir.ui.view: website_sale.website_sale_visitor_page_view_search
NEW ir.ui.view: website_sale.website_sale_visitor_page_view_tree
NEW ir.ui.view: website_sale.website_sale_visitor_track_view_graph
NEW ir.ui.view: website_sale.website_sale_visitor_track_view_tree
NEW ir.ui.view: website_sale.website_sale_visitor_view_form
NEW ir.ui.view: website_sale.website_sale_visitor_view_kanban
NEW ir.ui.view: website_sale.website_sale_visitor_view_tree
DEL ir.ui.view: website_sale.account_invoice_view_form
DEL ir.ui.view: website_sale.product_attributes
DEL ir.ui.view: website_sale.product_pricelist_view
DEL ir.ui.view: website_sale.product_template_website_tree_view
DEL ir.ui.view: website_sale.search count
DEL ir.ui.view: website_sale.website_sale
DEL ir.ui.view: website_sale_link_tracker.assets_backend
DEL ir.ui.view: website_sale_link_tracker.sale_order_from_website_link_tracker
DEL ir.ui.view: website_sale_link_tracker.sale_report_view_search_website_inherit
DEL ir.ui.view: website_sale_link_tracker.view_order_product_search_inherit
# NOTHING TO DO: Noupdate=0 records
