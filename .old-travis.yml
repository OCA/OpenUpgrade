language: python
sudo: false

python:
  - "3.7"

addons:
    apt:
        packages:
            - expect-dev  # provides unbuffer utility
            - python-lxml  # because pip installation is slow
            - python-simplejson
            - python-serial
            - python-yaml
            - python-passlib
            - python-psycopg2
            - python-werkzeug
            - realpath
    postgresql: "10"

env:
  - DB=openupgrade ODOO=./odoo-bin

# Need flake8 for pep8 testing
install:
    - pip install flake8==3.4.1 coveralls

# Test with flake for:
#   * migration scripts
#   * scripts/ directory
#   * odoo/addons/openupgrade* directories
#   * odoo/openupgrade/ directory
# use a max length of 120
script:
    - flake8 odoo/openupgrade --max-line-length=120
    - flake8 odoo/addons/openupgrade* --max-line-length=120 --filename=__init__.py --ignore=F401
    - flake8 odoo/addons/openupgrade* --max-line-length=120 --exclude=__init__.py
# only flake8 migration scripts from the openupgrade project, presumably
# identifiable by using the openupgrade helpers
    - flake8 --max-line-length=120 scripts $(find . \( -name 'pre-*.py' -or -name 'post-*.py' \) -exec grep -q openupgrade {} \; -print)
    - flake8 odoo/addons/*/migrations/*/tests/ --max-line-length=120
    - flake8 addons/*/migrations/*/tests/ --max-line-length=120
    - npm install -g less less-plugin-clean-css
    - createdb $DB
    - wget -q -O- https://github.com/OCA/OpenUpgrade/releases/download/databases/12.0.psql | pg_restore -d $DB --no-owner
    # TODO: create test data in Odoo 12.0 which does not support yml anymore
    # Roundtrip to previous release to update the test database with additional test data
    # - git fetch --depth 2 origin 12.0
    # - git reset --hard `git ls-remote |grep refs/heads/12.0 |awk '{print $1}'`
    # - pip install -q -r requirements.txt
    # Line below may fail quite often due to Travis bug:
    # - git reset -q --hard $TRAVIS_COMMIT
    # Install Python requirements of target release
    - pip install -q -r requirements.txt
    # don't use pypi's openupgradelib, but the one from source to avoid choking
    # on unreleased features in openupgradelib
    - pip install --ignore-installed git+https://github.com/OCA/openupgradelib.git@master
    # select modules and perform the upgrade
    - MODULES_OLD=base,$(sed -n '/^+========/,$p'  odoo/openupgrade/doc/source/modules120-130.rst | grep "Done\|Partial\|Nothing" | grep -v "theme_" | sed -r -n 's/((^\| *\|del\| *)|^\|)([0-9a-z_]*) *\|.*$/\3/g p' | sed '/^\s*$/d' | paste -d, -s)
    - MODULES_NEW=base,$(sed -n '/^+========/,$p'  odoo/openupgrade/doc/source/modules120-130.rst | grep "Done\|Partial\|Nothing" | grep -v "theme_" | sed -r -n 's/((^\| *\|new\| *)|^\|)([0-9a-z_]*) *\|.*$/\3/g p' | sed '/^\s*$/d' | paste -d, -s)
    - psql $DB -c "update ir_module_module set state='uninstalled' where name not in ('$(echo $MODULES_OLD | sed -e "s/,/','/g")')"
    - echo Testing modules $MODULES_NEW
    - OPENUPGRADE_TESTS=1 coverage run $ODOO --database=$DB --update=$MODULES_NEW --stop-after-init
    # try to build the documentation
    - pip install sphinx
    - sh scripts/build_openupgrade_docs

after_success:
    coveralls
